scopeName: 'source.forthel'
patterns: [
  { include: 'text.tex.latex#metaPercent' }
  { include: 'text.tex.latex#doubleBackslash' }
  { include: '#displayMathMode' }
  { include: '#inlineMathMode' }
  { include: '#instruction' }
  { include: '#topLevelSection'}
  { include: '#proof'}
]
repository:
  inlineMathMode: {
    comment: 'This can be triggered using $. (Picked up from language-latex2e.)'
    contentName: 'markup.other.math.inline.latex'
    begin: '(\\$)'
    beginCaptures:
      0: name: 'markup.other.math.inline.begin.latex'
    end: '(\\$)'
    endCaptures:
      0: name: 'markup.other.math.inline.end.latex'
    patterns: [
      {
        comment: 'When in inline math, the exit can only be $'
        name: 'invalid.illegal.latex'
        match: '(\\\\(\\[|\\]|\\(|\\)))'
      }
      { include: 'text.tex.latex#text' }
      { include: '#envCases'}
      { include: '#metaUnderscore'}
      { include: '#metaCaret'}
      { include: 'text.tex.latex#escapedCharacter' }
      { include: '#controlSymbol'}
      { include: '#controlWord'}
    ]
  }
  displayMathMode: {
    comment: 'This can be triggered using $$. (Picked up from language-latex2e.)'
    contentName: 'markup.other.math.display.latex'
    begin: '(\\$\\$)'
    beginCaptures:
      0: name: 'markup.other.math.display.begin.latex'
    end: '(\\$\\$)|((?=% !T[eE]X syntax))'
    endCaptures:
      0: name: 'markup.other.math.display.end.latex'
    patterns: [
      {
        comment: 'When in display math, the exit can only be $$'
        name: 'invalid.illegal.latex'
        match: '(\\$)(?=[^\\$])|(\\\\(\\[|\\]|\\(|\\)))'
      }
      { include: 'text.tex.latex#text' }
      { include: '#envCases'}
      { include: '#metaUnderscore'}
      { include: '#metaCaret'}
      { include: 'text.tex.latex#escapedCharacter' }
      { include: '#controlSymbol'}
      { include: '#controlWord'}
    ]
  }
  instruction: {
    patterns: [
      {
        comment: 'argument(s) instruction'
        match: '\\[(\\ *)(read|readtex|library|prover|provers|synonym)(\\ +)(.*?)(\\ *)\\]'
        name: 'variable.language.latex-ftl'
      }
      {
        comment: 'flag instruction'
        match: '\\[(\\ *)(prove|check|checkconsistency|symsign|info|thesis|filter|skipfail|flat|printgoal|printsection|printcheck|printunfold|printreason|printprover|printfulltask|dump|printsimp|printthesis|ontored|unfold|unfoldsf|unfoldlow|unfoldlowsf|checkontored|translation|tex)(\\ +)(on|off|yes|no)(\\ *)\\]'
        name: 'variable.language.latex-ftl'
      }
      {
        comment: 'limit instruction'
        match: '\\[(\\ *)(timelimit|depthlimit|checktime|checkdepth)(\\ +)[0-9]+(\\ *)\\]'
        name: 'variable.language.latex-ftl'
      }
      {
        comment: 'command instruction'
        match: '\\[(\\ *)(exit|quit|thesis|context|filter|rules)(\\ *)\\]'
        name: 'variable.language.latex-ftl'
      }
      {
        comment: 'drop instruction'
        match: '\\[(\\ *)/(\\ *)(prove|check|symsign|info|thesis|filter|skipfail|flat|printgoal|printsection|printcheck|printunfold|printreason|printprover|printfulltask|dump|printsimp|printthesis|ontored|unfold|unfoldsf|unfoldlow|unfoldlowsf|checkontored|translation|timelimit|depthlimit|checktime|checkdepth)(\\ *)\\]'
        name: 'variable.language.latex-ftl'
      }
    ]
  }
  topLevelSection: {
    patterns: [
      {
        commment: 'Theorem'
        begin: '((\\\\)begin)(\\{)(theorem)(\\})'
        beginCaptures:
          1: name: 'support.function.environment.begin.latex'
          2: name: 'punctuation.definition.function.begin.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        end: '((\\\\)end)(\\{)(theorem)(\\})'
        endCaptures:
          1: name: 'support.function.environment.end.latex'
          2: name: 'punctuation.definition.function.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        patterns: [
          { include: 'text.tex.latex#metaPercent' }
          { include: '#displayMathMode' }
          { include: '#inlineMathMode' }
          { include: '#assume'}
        ]
      }
      {
        commment: 'Lemma'
        begin: '((\\\\)begin)(\\{)(lemma)(\\})'
        beginCaptures:
          1: name: 'support.function.environment.begin.latex'
          2: name: 'punctuation.definition.function.begin.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        end: '((\\\\)end)(\\{)(lemma)(\\})'
        endCaptures:
          1: name: 'support.function.environment.end.latex'
          2: name: 'punctuation.definition.function.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        patterns: [
          { include: 'text.tex.latex#metaPercent' }
          { include: '#displayMathMode' }
          { include: '#inlineMathMode' }
          { include: '#assume'}
        ]
      }
      {
        commment: 'Proposition'
        begin: '((\\\\)begin)(\\{)(proposition)(\\})'
        beginCaptures:
          1: name: 'support.function.environment.begin.latex'
          2: name: 'punctuation.definition.function.begin.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        end: '((\\\\)end)(\\{)(proposition)(\\})'
        endCaptures:
          1: name: 'support.function.environment.end.latex'
          2: name: 'punctuation.definition.function.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        patterns: [
          { include: 'text.tex.latex#metaPercent' }
          { include: '#displayMathMode' }
          { include: '#inlineMathMode' }
          { include: '#assume'}
        ]
      }
      {
        commment: 'Corollary'
        begin: '((\\\\)begin)(\\{)(corollary)(\\})'
        beginCaptures:
          1: name: 'support.function.environment.begin.latex'
          2: name: 'punctuation.definition.function.begin.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        end: '((\\\\)end)(\\{)(corollary)(\\})'
        endCaptures:
          1: name: 'support.function.environment.end.latex'
          2: name: 'punctuation.definition.function.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        patterns: [
          { include: 'text.tex.latex#metaPercent' }
          { include: '#displayMathMode' }
          { include: '#inlineMathMode' }
          { include: '#assume'}
        ]
      }
      {
        commment: 'Definition'
        begin: '((\\\\)begin)(\\{)(definition)(\\})'
        beginCaptures:
          1: name: 'support.function.environment.begin.latex'
          2: name: 'punctuation.definition.function.begin.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        end: '((\\\\)end)(\\{)(definition)(\\})'
        endCaptures:
          1: name: 'support.function.environment.end.latex'
          2: name: 'punctuation.definition.function.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        patterns: [
          { include: 'text.tex.latex#metaPercent' }
          { include: '#displayMathMode' }
          { include: '#inlineMathMode' }
          { include: '#assume'}
        ]
      }
      {
        commment: 'Signature extension'
        begin: '((\\\\)begin)(\\{)(signature)(\\})'
        beginCaptures:
          1: name: 'support.function.environment.begin.latex'
          2: name: 'punctuation.definition.function.begin.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        end: '((\\\\)end)(\\{)(signature)(\\})'
        endCaptures:
          1: name: 'support.function.environment.end.latex'
          2: name: 'punctuation.definition.function.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        patterns: [
          { include: 'text.tex.latex#metaPercent' }
          { include: '#displayMathMode' }
          { include: '#inlineMathMode' }
          { include: '#assume'}
        ]
      }
      {
        commment: 'Axiom'
        begin: '((\\\\)begin)(\\{)(axiom)(\\})'
        beginCaptures:
          1: name: 'support.function.environment.begin.latex'
          2: name: 'punctuation.definition.function.begin.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        end: '((\\\\)end)(\\{)(axiom)(\\})'
        endCaptures:
          1: name: 'support.function.environment.end.latex'
          2: name: 'punctuation.definition.function.latex'
          3: name: 'punctuation.definition.arguments.begin.latex'
          4: name: 'entity.name.section.latex-ftl'
          5: name: 'punctuation.definition.arguments.end.latex'
        patterns: [
          { include: 'text.tex.latex#metaPercent' }
          { include: '#displayMathMode' }
          { include: '#inlineMathMode' }
          { include: '#assume'}
        ]
      }
    ]
  }
  proof: {
    begin: '((\\\\)begin)(\\{)(proof)(\\})'
    beginCaptures:
      1: name: 'support.function.environment.begin.latex'
      2: name: 'punctuation.definition.function.begin.latex'
      3: name: 'punctuation.definition.arguments.begin.latex'
      4: name: 'entity.name.section.latex-ftl'
      5: name: 'punctuation.definition.arguments.end.latex'
    end: '((\\\\)end)(\\{)(proof)(\\})'
    endCaptures:
      1: name: 'support.function.environment.end.latex'
      2: name: 'punctuation.definition.function.latex'
      3: name: 'punctuation.definition.arguments.begin.latex'
      4: name: 'entity.name.section.latex-ftl'
      5: name: 'punctuation.definition.arguments.end.latex'
    patterns: [
      {
        omment: 'do not highlight "case" in "proof by case analysis"'
        match: '\\bcase\\b\\ +\\banalysis\\b'
        name: 'meta.latex-ftl'
      }
      { include: 'text.tex.latex#metaPercent' }
      { include: '#displayMathMode' }
      { include: '#inlineMathMode' }
      { include: 'text.tex.latex#doubleBackslash' }
      { include: 'text.tex.latex#escapedCharacter' }
      { include: '#instruction'}
      { include: '#assume'}
      { include: '#take'}
      { include: '#define'}
      { include: '#lowLevelProof'}
      { include: '#lowLevelTheorem'}
    ]
  }
  assume: {
    match: '\\b([Ll]et|[Aa]ssume|[Ss]uppose|[Pp]resume)\\b'
    name: 'keyword.control.latex-ftl'
  }
  take: {
    match: '\\b([Tt]ake|[Cc]hoose|[Cc]onsider)\\b'
    name: 'keyword.control.latex-ftl'
  }
  define: {
    match: '\\b([Dd]efine)\\b'
    name: 'keyword.control.latex-ftl'
  }
  lowLevelProof: {
    match: '\\b([Pp]roof|[Cc]ase|[Ii]ndeed|[Qq][Ee][Dd]|[Ee][Nn][Dd]|[Oo]bvious|[Tt]rivial)\\b'
    name: 'entity.name.section.latex-ftl'
  }
  lowLevelTheorem: {
    match: '((\\b[Ll]et\\b\\ +\\bus\\b)|(\\b[Ww]e\\b\\ +\\bcan\\b))\\ +(\\b(show|prove|demonstrate)\\b)'
    name: 'entity.name.section.latex-ftl'
  }
  controlSymbol: {
    comment: 'Mostly covered by escapedCharacter, but this is a catch all for any control symbols'
    name: 'keyword.control.symbol.latex'
    match: '\\\\([^a-zA-Z@]|@(?=[^a-zA-Z@]))'
  }
  controlWord: {
    comment: 'A catch all for latex control words that have not already been identified.'
    match: '(\\\\)([a-zA-Z@]+)'
    captures:
      0: name: 'support.function.general.latex'
      1: name: 'punctuation.definition.function.latex'
      2: name: 'support.function.general.tex'
  }
  envCases: {
    commment: 'Case split in low-level function definitions'
    begin: '((\\\\)begin)(\\{)(cases)(\\})'
    beginCaptures:
      1: name: 'support.function.environment.begin.latex'
      2: name: 'punctuation.definition.function.begin.latex'
      3: name: 'punctuation.definition.arguments.begin.latex'
      4: name: 'variable.parameter.function.latex'
      5: name: 'punctuation.definition.arguments.end.latex'
    end: '((\\\\)end)(\\{)(cases)(\\})'
    endCaptures:
      1: name: 'support.function.environment.end.latex'
      2: name: 'punctuation.definition.function.latex'
      3: name: 'punctuation.definition.arguments.begin.latex'
      4: name: 'variable.parameter.function.latex'
      5: name: 'punctuation.definition.arguments.end.latex'
    patterns: [
      { include: 'text.tex.latex#metaPercent' }
      { include: 'text.tex.latex#doubleBackslash' }
      { include: 'text.tex.latex#escapedCharacter' }
      { include: '#ampersand' }
      { include: '#take'}
      { include: 'text.tex.latex#text' }
    ]
  }
  ampersand: {
    match: '&'
    name: 'constant.character.ampersand.latex'
  }
